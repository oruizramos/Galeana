@import url("https://fonts.googleapis.com/css?family=Quicksand|Russo+One&display=swap");

$hue: 50;
$shift: 30;
$color: #9b9b7a;
$light: lighten(adjust-hue($color, $shift), 20%);
$lighter: lighten(adjust-hue($color, $shift * 2), 40%);
$dark: darken(adjust-hue($color, -$shift), 10%);
$darker: #797d62;
$pop: #d9ae94;

$base: 1.2vh;
$short: 200ms;
$mid: 600ms;
$long: 2000ms;
$ease-in: cubic-bezier(0.755, 0.05, 0.855, 0.06);
$ease-out: cubic-bezier(0.23, 1, 0.32, 1);
$grid-size: 10rem;
$rows: 5;
$cols: 5;

@mixin absolute {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.center {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $grid-size * $cols;
  height: $grid-size * $rows;
  transform: perspective(100rem) translate(-50%, -50%) rotateZ(-45deg); // later
}

html {
  font-size: $base;
}

body {
  height: 100vh;
  width: 100vw;
  overflow: hidden;
  background: $darker;
  color: #f1dca7;
  font-size: 2rem;
  font-family: "Quicksand", sans-serif;
}

.level {
  opacity: 0;
  transform: translate($grid-size * 2, -$grid-size * 2);
  pointer-events: none;
  transition: transform $mid $ease-out, opacity $mid $ease-out;
  &[l="1"] {
    opacity: 1;
    pointer-events: auto;
    transform: translate(0, 0);
  }
  &:hover .finish {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
    transition: transform $short $ease-out, opacity $short linear;
  }
}

.level-title {
  position: absolute;
  max-width: 40rem;
  top: -20rem;
  left: -20rem;
  font-family: "Russo One", sans-serif;
  font-size: 2rem;
  transform: none;;
}

input {
  opacity: 0;
  pointer-events: none;
}

input:checked + .level + input + .level {
  opacity: 1;
  pointer-events: auto;
  transform: translate(0, 0);
}

input:checked + .level {
  opacity: 0 !important;
  pointer-events: none !important;
  transform: translate(-$grid-size * 2, $grid-size * 2) !important;
}

.button {
  position: absolute;
  top: 5%;
  left: 20%;
  width: 75%;
  height: 75%;
  border-radius: $grid-size;
  background: $pop;
  text-align: center;
  line-height: $grid-size * 0.8;
  box-shadow: -$grid-size * 0.05 $grid-size * 0.05 $grid-size * 0.05 $color;
  transition: box-shadow $short $ease-out, transform $short $ease-out;
  &:hover {
    transform: translate($grid-size * 0.05, -$grid-size * 0.05);
    box-shadow: -$grid-size * 0.2 $grid-size * 0.2 $grid-size * 0.3 $color;
  }
  &:active {
    transform: translate($grid-size * -0.05, -$grid-size * -0.05);
    box-shadow: 0 0 0 $color;
  }
  cursor: url(/images/mcursorclickexit1.png)
      30 30,
    auto;
}

.goal {
  position: absolute;
  top: 5%;
  left: 20%;
  width: 75%;
  height: 75%;
  border-radius: $ease-in;
  background: $pop;
  text-align: center;
  line-height: $grid-size * 0.8;
  box-shadow: -$grid-size * 0.05 $grid-size * 0.05 $grid-size * 0.05 $color;
  transition: box-shadow $short $ease-out, transform $short $ease-out;
  &:hover {
    transform: translate($grid-size * 0.05, -$grid-size * 0.05);
    box-shadow: -$grid-size * 0.2 $grid-size * 0.2 $grid-size * 0.3 $color;
  }
  &:active {
    transform: translate($grid-size * -0.05, -$grid-size * -0.05);
    box-shadow: 0 0 0 $color;
  }
  cursor: url(/images/mcursorclickexit1.png)
      30 30,
    auto;
}

.button {
  background: $light;
}

input:checked + .button {
  pointer-events: none;
  transform: translate($grid-size * -0.05, -$grid-size * -0.05);
  box-shadow: 0 0 0 $color;
}

#level-one {
  position: absolute;
  z-index: 10000;
}

.step {
  width: $grid-size * 1.01;
  height: $grid-size * 1.01;
  background: $light;
  position: absolute;
  top: 0;
  left: 0;
  opacity: 0;
  transform: translate(-$grid-size/2, $grid-size/2);
  pointer-events: none;
  transition: transform $mid $ease-in, opacity $mid linear;
  cursor: url(/images/mcursormove1.png)
      30 30,
    auto;

  &::before,
  &::after {
    content: "";
    @include absolute;
    pointer-events: none !important;
  }
  &::before {
    left: -20%;
    background: $dark;
    transform-origin: 100% 100%;
    transform: skewy(-45deg);
    width: 20%;
  }

  &::after {
    top: 100%;
    background: $color;
    transform-origin: 0% 0%;
    transform: skewX(-45deg);
    height: 20%;
  }

  &.start,
  &.finish {
    &::before {
      left: -50%;
      width: 50%;
    }
    &::after {
      height: 50%;
    }
  }

  &.start,
  &:hover,
  &:hover + .step,
  &:hover + .path > .step:first-child,
  &:hover + .path + .step,
  &:hover + .bridge > input:checked + .step,
  &:hover + .bridge > input:not(:checked) + .step + .step {
    transform: scale(1);
    opacity: 1;
    pointer-events: auto;
    transition: transform $short $ease-out, opacity $short linear;
  }

  @for $r from 1 through 4 {
    &[r="#{$r}"] {
      top: $r * 10rem;
    }
  }

  @for $c from 1 through 4 {
    &[c="#{$c}"] {
      left: $c * 10rem;
    }
  }

  @for $r from 0 through 4 {
    @for $c from 0 through 4 {
      &[c="#{$c}"][r="#{$r}"] {
        z-index: ($r + 1) * ($cols - $c);
      }
    }
  }
}

.bridge {
  pointer-events: none;
}


#red {
  background-color: #a5ffd6;
}

#yellow {
  background-color: #c19ee0;
}

#blue {
  background-color: #a9def9;
}

#green {
  background-color: #d88c9a;
}


span {
  color: #d9ae94;
}

.first {
  color: #a5ffd6;
}

.second {
  color: #c19ee0;
}

.third {
  color: #a9def9;
}

.fourth {
  color: #d88c9a;
}

h1 {
  font-size: 5rem;
  margin: 0;
}
p {
  margin-top: 0;
}

.portfolio {
  display: inline-block;
  margin-top: 2rem;
  text-decoration: none;
  padding: 2rem;
  border-radius: 5rem;
  background: $pop;
  color: white;
  box-shadow: -$grid-size * 0.05 $grid-size * 0.05 $grid-size * 0.05
    darken($darker, 10%);
  transition: box-shadow $short $ease-out, transform $short $ease-out;
  &:hover {
    transform: translate($grid-size * 0.05, -$grid-size * 0.05);
    box-shadow: -$grid-size * 0.15 $grid-size * 0.15 $grid-size * 0.25
      darken($darker, 10%);
  }
  &:active {
    transform: translate($grid-size * -0.05, -$grid-size * -0.05);
    box-shadow: -$grid-size * 0 $grid-size * 0 $grid-size * 0
      darken($darker, 10%);
  }
  cursor: pointer;
}
.message {
  transform: rotate(45deg) translate(-10rem, -15rem);
  text-align: center;
  width: 60rem;
}

.signature {
  position: fixed;
  bottom: 4rem;
  right: 8rem;
  text-decoration: none;
  font-weight: 100;
  font-family: sans-serif;
  color: rgba(255, 255, 255, 0.4);
  letter-spacing: 2px;
}

.gametitle {
  position: fixed;
  bottom: 1rem;
  left: 8rem;
  text-decoration: none;
  font-weight: 100;
  font-family: sans-serif;
  color: rgba(255, 255, 255, 0.4);
  letter-spacing: 2px;
}


